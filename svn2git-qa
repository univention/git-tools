#!/usr/bin/python
# compare the HEAD of each branch with the svn state
# git branch | grep backup | while read ibak; do ibranch=${ibak##*/}; echo "### $ibak $ibranch ###"; git diff --numstat $ibak $ibranch; done | less

import git
import os
from subprocess import check_call, check_output, PIPE, STDOUT, Popen, CalledProcessError, call

EXPORTS = '../exports'


def checkout(branch, **kwargs):
	check_call(['git', 'checkout', branch], **kwargs)


def url(branch):
	checkout('remotes/svn/%s' % (branch,), stdout=PIPE, stderr=PIPE)
	x = check_output(['git', 'svn', 'info'])

	def getfield(field):
		return [y.split(field, 1)[-1] for y in x.splitlines() if y.startswith(field)][0].strip()
	return (getfield('URL: '), int(getfield('Last Changed Rev: ')))


def svn_export(url, target, revision):
	target = os.path.join(EXPORTS, target)
	if not os.path.exists(target):
		try:
			check_call(['svn', 'export', url, target])
		except CalledProcessError:
			check_call(['svn', 'export', '%s@%d' % (url, revision), target])


def diff(target):
	# TODO: git can't have empty directories; they are detected as differing
	targetdir = os.path.join(EXPORTS, target)
	process = Popen(['find', '-type', 'f', '-not', '-path', './.git/*', '-printf', r'%m\t%p\n'], stdout=PIPE)
	process2 = Popen(['find', '-type', 'f', '-printf', r'%m\t%p\n'], stdout=PIPE, cwd=targetdir)
	pid = os.getpid()
	process3 = Popen(['diff', '-u0', '/proc/%s/fd/%s' % (pid, process.stdout.fileno(),), '/proc/%s/fd/%s' % (pid, process2.stdout.fileno())])
	process2.wait()
	process.wait()
	process3.communicate()

	p = Popen(['diff', '-u', '-r', '--exclude', '.git', '.', targetdir], stderr=STDOUT, stdout=PIPE)
	stdout = p.communicate()[0]
	if p.returncode:
		return stdout


def main():
	if not os.path.exists(EXPORTS):
		os.makedirs(EXPORTS)

	repo = git.Repo()
	for branch in repo.branches:
		if branch.name in ('master', 'trunk', 'ucsschool', 'ucs') or 'split' in branch.name or 'backup' in branch.name:
			continue
		uri, revision = url(branch.name)
		svn_export(uri, branch.name, revision)
		checkout(branch.name)
		changes = diff(branch.name)
		if changes:
			print '### branch %s differs:\n%s\n##################' % (branch.name, changes)


if __name__ == '__main__':
	call('git branch | grep backup | while read ibak; do ibranch=${ibak##*/}; echo "### $ibak $ibranch ###"; git diff --numstat $ibak $ibranch; done', shell=True)
	main()
